@model FICTFeed.Bussines.Models.User
@{
    var group = FICTFeed.DependecyResolver.Resolver.GetInstance<FICTFeed.Framework.Groups.IGroupsManager>().GetById(Model.GroupId.ToString());
    var schedule = FICTFeed.Framework.Extensions.ObjectExtensions.DeserializeAs<FICTFeed.Framework.Shedule.Schedule>(group.Schedule).GetScheduleForToday();
}           
<h3>@Html.ResourceString("Lessons")</h3>
<b>
    <div>@Html.ResourceString("CurrentWeekNo").FormatWith(FICTFeed.Framework.Shedule.Schedule.GetWeekNumber() + 1)</div>
    <div>@Html.ResourceString("CurrentDayIs").FormatWith(Html.ResourceString(DateTime.Today.DayOfWeek.ToString()), DateTime.Today.ToShortDateString())</div>
</b>
@for (int j = 0; j < 8; j++)
{
    schedule.Lessons[j].MapStartTimes();
    if (string.IsNullOrWhiteSpace(schedule.Lessons[j].Name))
    {
        continue;
    }
    <div class="lesson">
        @Html.DisplayFor(m => schedule.Lessons[j].Name), 
        <b>@Html.DisplayFor(m => schedule.Lessons[j].Room)</b> :
        @Html.DisplayFor(m => schedule.Lessons[j].Start)
    </div>
}
<a href="@(Url.RouteUrl("GetSchedulePDF") + "?id=" + group.Id.ToString())">@Html.ResourceString("GetFullSchedule")</a>